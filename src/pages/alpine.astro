---
import { checkUserCookie, getCookieUser } from "../lib/auth";
import { getUserBits } from "../lib/db";
import Header from "../layout/header.astro";

const jwt = Astro.cookies.get(import.meta.env.JWT_NAME)?.value;
if (!jwt) return Astro.redirect("/user/login");

const cookieUser = await checkUserCookie(jwt);
if (!cookieUser) return Astro.redirect("/user/login");

const [user] = await getCookieUser(cookieUser.userid, cookieUser.email);

if (!user || !user.userid) return Astro.redirect("/user/login");

const bits = await getUserBits(user.userid);
console.log(bits[0]);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
    ></script>
  </head>
  <body>
    <Header>
      <a>profile</a>
    </Header>
    <script is:inline>
      const deleteReq = (id) =>
        fetch("/api/bits/delete", {
          method: "POST",
          body: id,
        }).then(async (res) => {
          const resp = await res.text();
          return res.ok ? { success: true } : { error: resp };
        });

      const createReq = (text) =>
        fetch("/api/bits/new", {
          method: "POST",
          body: text,
        }).then(async (res) => {
          if (res.ok) return { data: await res.json() };
          return { error: await res.text() };
        });

      document.addEventListener("alpine:init", () => {
        //
        Alpine.data("app", () => ({
          async deleteField(id) {
            const cmd = await deleteReq(id);
            if (cmd.success)
              this.bits = this.bits.filter((bit) => bit.id !== id);
            else console.log(cmd.error);
          },
          input: "",
          async onSubmit() {
            const resp = await createReq(this.input);

            if (resp.error) {
              console.log(resp.error);
              return;
            }

            this.bits = [...this.bits, resp.data];
            this.input = "";
          },
          onEnter(ev) {
            if (!ev.shiftKey) {
              ev.preventDefault();
              this.onSubmit();
            }
          },
          scrollDown(el) {
            el.scrollTop = el.scrollHeight;
          },
        }));
        //
      });
    </script>
    <main
      class="mx-auto max-w-[900px] px-6 sm:px-8"
      x-data={JSON.stringify({ bits })}
    >
      <div x-data="app">
        <div class="h-[calc(100dvh-48px)] flex flex-col">
          <div x-ref="scrollref" class="grow overflow-auto">
            <ul>
              <template x-for="bit in bits" :key="bit.id">
                <div class="mb-4 group flex items-center">
                  <li class="bg-blue-200 p-2 pl-6 pr-6 rounded-xl w-fit">
                    <span x-text="bit.text"></span>
                    <!-- <RenderHyperlinks text={bit.text} />{" "} -->
                    <span class="ml-6 text-[0.7em]" x-text="bit.date.slice(-8)">
                    </span>
                  </li>
                  <button
                    class="ml-6 bg-slate-100 hidden group-hover:block w-8 h-8 rounded-full"
                    @click="deleteField(bit.id)"
                  >
                    x
                  </button>
                </div>
              </template>
            </ul>
          </div>

          <form
            @submit.prevent=`onSubmit().then( ()=> $nextTick(() => scrollDown($refs.scrollref)) )`
          >
            <div
              class="shadowclip p-1 flex flex-wrap items-start gap-3 shadow-[0px_0px_10px_rgba(0,0,0,0.3)] clip"
            >
              <textarea
                class="rounded-sm px-2 py-1 w-full max-w-[600px]"
                name="text"
                rows={3}
                placeholder="Your new Bit..."
                x-model="input"
                @keydown.enter="if($event.shiftKey)return; $event.preventDefault(); $refs.submitbutton.click()"
              ></textarea>
              <button
                x-ref="submitbutton"
                class="bg-blue-200 rounded-full px-4 py-1"
              >
                Submit
              </button>
            </div>
          </form>
        </div>
      </div>
    </main>
  </body>
</html>
